<?php
/*

error_reporting(E_ALL);
ini_set('display_errors', '1');
*/


drupal_add_js(drupal_get_path('module', 'user_list') .'/user_list.js', array('type' => 'file', 'scope' => 'footer'));
drupal_add_js('https://maps.googleapis.com/maps/api/js?key=AIzaSyAtwq1zUmBanBSj6mp3UyI7SNjTC5dNjuc','external');

function user_list_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'user_list'),
    'template path' => drupal_get_path('module', 'user_list')
  );
}
/**
 * Impliments hook_theme()
 */
function user_list_theme($existing, $type, $theme, $path){
  return array(
    "preprocess functions"=>array("user_list_preprocess_views_view"),
    "man_svg" => array(
      'template' => '/templates/man_svg',
      'variables' => array(
        'user' => NULL,
      ),
    ),
  );
}

function user_list_preprocess_views_view(&$vars){
  $view = $vars["view"];
  if($view->name == "list_users" && count($view->result)){
    $users = array();
    foreach($view->result as $result){
      $users[] = user_load($result->uid);
    }
    $existing = array_key_exists("user_data",$GLOBALS) ? $GLOBALS["user_data"] : array();
    $result = array_merge($existing,$users);
    $GLOBALS["user_data"] = $result;
  }
  //add total rows for the front end
  $GLOBALS["total_rows"][$view->current_display] = (int) $view->total_rows;
}

function user_list_block_info(){
  $blocks["map"] = array(
    "info" => t("User List Map")
  );
  
  return $blocks;
}

/**
 * Implements hook_menu().
 */
 
function user_list_menu() {
  $items['ajax/nextusers'] = array(
    'page callback' => 'user_list_get_next_users',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['ajax/prevusers'] = array(
    'page callback' => 'user_list_get_prev_users',
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );
  $items['svg/user/%'] = array(
    'page callback' => 'user_list_generate_svg',
    'type' => MENU_CALLBACK,
    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Callback to return JSON encoded image for given nid.
 */
function user_list_get_next_users($amount = 10, $offset = 0) {

  $view = views_get_view("list_users");
    
  if(user_is_logged_in()){
   //load the attachment
   $view->set_display("uids_more");
  } else {
    $view->set_display("list_users");
  }
  if($amount > 100){
    die();
  }
  $view->set_items_per_page($amount);
  $view->set_current_page(0);
  $view->set_offset($offset);
  
  user_list_print_result($view);
}

function user_list_get_prev_users($amount = 10, $offset = 0) {

  $view = views_get_view("list_users");
  
  
  if(user_is_logged_in()){
   //load the attachment
   $view->set_display("uids_less");   
  } else {
    $view->set_display("list_users");
  }
  if($amount > 100){
    die();
  }
  $view->set_items_per_page($amount);
  $view->set_current_page(0);
  $view->set_offset($offset);
  
  user_list_print_result($view);
}

function user_list_print_result($view){
  $view->pre_execute();
  $view->execute();
  $result = array(
    "users"      => array(),
    "totalItems" => $view->total_rows, 
    "itemsLeft"  => $view->total_rows - ( count($view->result) * $view->current_page )
  );
  $result["accounts"] = array();
  
  foreach($view->result as $row){
    $user = user_load($row->uid);
    $user_markup = user_view($user, "person");
    $user->html = drupal_render($user_markup);
    $result["accounts"][] = $user;
  }
  
  echo json_encode($result);
  die();
}

function user_list_page_build(&$page) {
  $path = current_path();
  $pos = strpos($path, "svg/user");
  if ($pos === 0) {
    //only print the markup
    drupal_add_http_header('Content-type', 'image/svg+xml');
    die($page["footer_top"]["system_main"]["main"]["#markup"]);
  }
} 


function user_list_generate_svg($uid = NULL){
  $user = user_load($uid);
  return theme('man_svg', array('user' => $user ));
}

